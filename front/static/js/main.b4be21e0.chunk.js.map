{"version":3,"sources":["components/Profile/RefreshPassword/RefreshPassword.module.css","components/Header/Header.module.css","redux/Reducer/authReducer.js","redux/Reducer/profileReducer.js","redux/Reducer/rootReducer.js","redux/types.js","components/Header/LinkToOtherRoute.jsx","redux/utils/authUtils.js","config.js","redux/Actions/authAction.js","components/Header/Account.jsx","components/Header/Header.jsx","components/Auth/Auth.jsx","components/Profile/RefreshPassword/utils.js","components/Profile/RefreshPassword/RefreshPassword.jsx","components/Profile/AddBusStop/utils.js","components/Profile/AddBusStop/AddBusStop.jsx","components/Profile/Profile.jsx","components/Transport/Table.jsx","components/Transport/utils.js","components/Transport/Transport.jsx","components/CreateAccount/CreateAccount.jsx","App.jsx","serviceWorker.js","index.js","redux/Middleware/AuthMiddleware.js","components/Transport/Transport.module.css","components/Profile/AddBusStop/AddBusStop.module.css"],"names":["module","exports","initialState","isAuth","isAlert","user_name","create_at","add_bus_stop_time","email_activatet","email","rootReducer","combineReducers","auth","state","action","type","profile","payload","LinkToOtherRoute","props","value","activeClassName","className","to","link","name","defaultProps","style","tokenLifeCheck","token","data","jwt","decode","exp","parseInt","Date","getTime","toString","slice","domain","window","origin","checkAuth","login","password","dispatch","a","body","JSON","stringify","fetch","method","headers","response","json","undefined","status","detail","localStorage","setItem","access_token","refresh_token","setTimeout","refreshTokenAction","accessToken","refreshToken","then","e","connect","React","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","Button","aria-controls","fontSize","fontWeight","border","color","onClick","event","currentTarget","size","variant","key","Menu","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","removeItem","routs","otherLink","otherName","needAuth","Header","header","wrapper","content","logo","map","replace","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","backgroundColor","borderRadius","padding","avatar","margin","palette","secondary","main","form","width","submit","h5","alert","classes","Container","component","maxWidth","Alert","severity","push","Avatar","onSubmit","preventDefault","valueForm","target","index","elements","length","element","err","TypeError","console","error","document","getElementById","TextField","required","fullWidth","label","autoFocus","textInput","refreshPassword","oldPassword","newPassword","old_password","new_password","success","RefreshPassword","setPassword","setAlert","onChangePassword","getItem","onChange","addBusStop","busStopName","city","typeBusStop","bus_stop_name","type_bus_stop","getCityStops","AddBusStop","formData","setFormData","selectionRef","useRef","useEffect","current","innerHTML","append","Option","option","options","selectedIndex","text","h6","Select","ref","Profile","url","useRouteMatch","useSelector","path","TableComponent","Head","busStopData","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","Object","entries","getBusStopInformation","transport_number","selection_bus_stop","time","sort","transport_type","defaulTableValue","isFirst","Transport","parse","getDefaultTableOptions","tableOptions","settableOptions","tableValue","setTableValue","transportType","container","Typography","gutterBottom","textAlign","Slider","defaultValue","aria-labelledby","valueLabelDisplay","step","marks","min","max","newValue","createAccount","CreateAccount","setData","msg","redirect","setRedirect","checkToken","location","hostname","match","store","createStore","compose","applyMiddleware","thunk","next","getState","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.b4be21e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"h5\":\"RefreshPassword_h5__3bzKs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__34SWf\",\"wrapper\":\"Header_wrapper__1srRb\",\"content\":\"Header_content__3V-97\",\"docs\":\"Header_docs__1kQ8h\",\"profile\":\"Header_profile__1FpXd\",\"transport\":\"Header_transport__3dImZ\",\"auth\":\"Header_auth__30pOx\",\"logo-link\":\"Header_logo-link__3iu2a\",\"is-active\":\"Header_is-active__WvJRJ\"};","import {PUT_AUTH, REMOVE_AUTH, ADD_ALERT, REMOVE_ALERT} from '../types'\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    isAlert: false,\r\n};\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PUT_AUTH:\r\n            return ({ ...state, isAuth: true });\r\n        case REMOVE_AUTH:\r\n            return ({ ...state, isAuth: false });\r\n        case ADD_ALERT:\r\n            return ({...state, isAlert: true});\r\n        case REMOVE_ALERT:\r\n            return ({...state, isAlert: false});\r\n        default: return state\r\n    }\r\n};","import {ADD_PROFILE_INFO} from '../types'\r\n\r\nconst initialState = {\r\n    user_name: null,\r\n    create_at: null,\r\n    add_bus_stop_time: \"none\",\r\n    email_activatet: false,\r\n    email: null\r\n};\r\n\r\nexport const profileReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_PROFILE_INFO:\r\n            return ({ ...state, ...action.payload });\r\n        default: return state\r\n    }\r\n};","import { combineReducers } from \"redux\";\r\nimport { authReducer } from './authReducer'\r\nimport { profileReducer } from './profileReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    profile: profileReducer\r\n});","export const PUT_AUTH = \"AUTH/PUT_AUTH\";\r\nexport const REMOVE_AUTH = \"AUTH/REMOVE_AUTH\";\r\nexport const ADD_ALERT = \"AUTH/ADD_ALERT\";\r\nexport const REMOVE_ALERT = \"AUTH/REMOVE_ALERT\";\r\n\r\nexport const ADD_PROFILE_INFO = \"PROFILE/ADD_PROFILE_INFO\";\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Header.module.css';\r\n\r\nconst LinkToOtherRoute = (props) => {\r\n    const { value, activeClassName, className } = props;\r\n    return (\r\n        <NavLink className={className} activeClassName={activeClassName} to={value.link}>{value.name}</NavLink>\r\n    );\r\n};\r\n\r\nLinkToOtherRoute.defaultProps = {\r\n    value: {\r\n        link: '/',\r\n        name: 'AntiController',\r\n    },\r\n    activeClassName: style['is-active'],\r\n    className: style['nav-link'],\r\n};\r\n\r\nLinkToOtherRoute.propTypes = {\r\n    value: PropTypes.shape({\r\n        link: PropTypes.string,\r\n        name: PropTypes.string,\r\n    }),\r\n    activeClassName: PropTypes.string,\r\n    className: PropTypes.string,\r\n};\r\n\r\nexport default LinkToOtherRoute;","import jwt from 'jsonwebtoken'\r\n\r\nexport function tokenLifeCheck(token) {\r\n    const data = jwt.decode(token);\r\n    const exp = data !== null ? data.exp : false;\r\n    if (!exp) return false;\r\n    const time = parseInt(new Date().getTime().toString().slice(0, -3));\r\n    if (exp > time) return true;\r\n    return false\r\n}\r\n","export const domain = window.origin;\r\n","import { PUT_AUTH, REMOVE_AUTH, ADD_ALERT, REMOVE_ALERT } from '../types'\r\nimport { tokenLifeCheck } from '../utils/authUtils'\r\nimport {domain} from '../../config'\r\n\r\n\r\nfunction putAuth() {\r\n    return {\r\n        type: PUT_AUTH,\r\n    }\r\n}\r\n\r\nexport function removeAuth() {\r\n    return {\r\n        type: REMOVE_AUTH,\r\n    }\r\n}\r\n\r\nfunction addAlert() {\r\n    return {\r\n        type: ADD_ALERT\r\n    }\r\n}\r\n\r\nfunction removeAlert() {\r\n    return {\r\n        type: REMOVE_ALERT\r\n    }\r\n}\r\n\r\nexport function checkAuth(login, password) {\r\n    return async (dispatch) => {\r\n        const body = JSON.stringify({ \"login\": login, \"password\": password });\r\n        const response = await fetch(`${domain}/api/auth`, {\r\n            method: 'POST',\r\n            body: body,\r\n            headers: {\r\n                'Content-Type': 'application/x-www-form-urlencoded',\r\n            },\r\n        });\r\n        const json = await response.json();\r\n        if (json.status === undefined && json.detail === undefined) {\r\n            localStorage.setItem('accessToken', json.access_token);\r\n            localStorage.setItem('refreshToken', json.refresh_token);\r\n            dispatch(putAuth())\r\n        } else {\r\n            dispatch(removeAuth());\r\n            dispatch(addAlert());\r\n            setTimeout(() => {\r\n                dispatch(removeAlert())\r\n            }, 1000)\r\n        }\r\n    }\r\n}\r\n\r\nexport function checkToken(token) {\r\n    return (dispatch) => {\r\n        const tokenLife = tokenLifeCheck(token);\r\n        if (tokenLife) dispatch(putAuth())\r\n    }\r\n}\r\n\r\n\r\nexport function refreshTokenAction(accessToken, refreshToken) {\r\n    return (dispatch) => {\r\n        if (!tokenLifeCheck(accessToken) && tokenLifeCheck(refreshToken)) {\r\n            fetch(`${domain}/api/refresh_token`, {\r\n                method: 'POST',\r\n                body: JSON.stringify({ \"refresh_token\": refreshToken }),\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                },\r\n            })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                try {\r\n                    if (json['status'] === undefined) {\r\n                        localStorage.setItem('accessToken', json.access_token);\r\n                        localStorage.setItem('refreshToken', json.refresh_token);\r\n                        dispatch(putAuth())\r\n                    } else {\r\n                        dispatch(removeAuth())\r\n                    }\r\n                } catch (e) {}\r\n            })\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from 'react-router-dom';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport style from './Header.module.css';\r\nimport {removeAuth} from \"../../redux/Actions/authAction\";\r\nimport { connect } from 'react-redux'\r\n\r\nconst Account = ({auth, dispatch}) => {\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const open = Boolean(anchorEl);\r\n\r\n    const handleMenu = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('accessToken');\r\n        localStorage.removeItem('refreshToken');\r\n        dispatch(removeAuth());\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {auth ? <Button\r\n            aria-controls=\"menu-appbar\"\r\n            style={{\r\n                fontSize: \"15px\",\r\n                fontWeight: 600,\r\n                border: \"none\",\r\n                color: '#fff',\r\n            }}\r\n            onClick={handleMenu}\r\n            color=\"inherit\"\r\n            size='medium'\r\n            variant='outlined'\r\n            className={style.profile}\r\n            key='account'>\r\n                Аккаунт\r\n        </Button>:\r\n            <NavLink to='/auth' key='auth' className={style.auth}>Вход</NavLink>}\r\n\r\n            <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                open={open}\r\n                onClose={handleClose}>\r\n                <MenuItem onClick={handleClose}><NavLink to='/user/refresh_password'>Изменить пароль</NavLink></MenuItem>\r\n                <MenuItem onClick={handleClose}><NavLink to='/user/add_bus_stop'>Добавить остановку</NavLink></MenuItem>\r\n                <MenuItem onClick={logout}><NavLink to='/auth'>Выйти</NavLink></MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n};\r\n\r\nconst stateToProps = (state) => ({\r\n    auth: state.auth.isAuth,\r\n});\r\n\r\nexport default connect(stateToProps)(Account);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LinkToOtherRoute from './LinkToOtherRoute';\r\nimport style from './Header.module.css';\r\nimport Account from './Account';\r\n\r\nconst routs = [\r\n    {\r\n        link: '/transport',\r\n        name: 'Транспорт',\r\n    },\r\n    {\r\n        link: '/auth',\r\n        name: 'Войти',\r\n        otherLink: '/profile',\r\n        otherName: 'Профиль',\r\n        needAuth: true,\r\n    },\r\n];\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header className={style.header}>\r\n            <div className={style.wrapper}>\r\n                <div className={style.content}>\r\n                    <div className={style.logo}>\r\n                        <LinkToOtherRoute\r\n                            key='AntiController'\r\n                            value={{link: '/', name: 'AntiController'}}\r\n                            activeClassName=''\r\n                            className={style['logo-link']}/>\r\n                    </div>\r\n                    <nav>\r\n                        {routs.map((value) => (\r\n                            !(value.needAuth) && <LinkToOtherRoute\r\n                                    key={value.link}\r\n                                    value={{link: value.link, name: value.name}}\r\n                                    className={style[value.link.replace('/', '')]}\r\n                                />))}\r\n                    </nav>\r\n                    <Account />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    auth: PropTypes.bool\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { checkAuth } from '../../redux/Actions/authAction';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(13),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        borderRadius: '20px',\r\n        padding: '5% 8%'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    h5: {\r\n        fontWeight: '400',\r\n        fontSize: '2em'\r\n    }\r\n}));\r\n\r\nconst Auth = ({auth, alert, dispatch}) => {\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        let valueForm = {\r\n            login: undefined,\r\n            password: undefined,\r\n        };\r\n\r\n        const { target } = e;\r\n        for (let index = 0; index <= target.elements.length; index++) {\r\n            try {\r\n                const element = target.elements[index];\r\n                if (element.type === 'text') {\r\n                    valueForm[element.name] = element.value;\r\n                }\r\n            } catch (err) {\r\n                if (!(err instanceof TypeError)) {\r\n                    console.error(err);\r\n                }\r\n            }\r\n            valueForm.password = document.getElementById('passwordField').value;\r\n            dispatch(checkAuth(valueForm.login, valueForm.password));\r\n        }\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"sm\">\r\n            {alert && <Alert severity=\"error\">This is an error alert — check it out!</Alert>}\r\n            {auth ? <Redirect push to='/transport' /> : <></>}\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <h4 className={classes.h5}>Sign in</h4>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Login\"\r\n                        name=\"login\"\r\n                        type='text'\r\n                        autoFocus\r\n                        className={classes.textInput}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"passwordField\"\r\n                        className='password'\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <NavLink to='/create_account'>У вас нет аккаунта? Регистрация</NavLink>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {\r\n    setIsAuth: PropTypes.func,\r\n    ws: PropTypes.any,\r\n    serverData: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth.isAuth,\r\n    alert: state.auth.isAlert,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Auth);\r\n","import jwt from 'jsonwebtoken';\r\nimport {domain} from \"../../../config\";\r\n\r\nexport const refreshPassword = async (token, oldPassword, newPassword) => {\r\n    const user_name = jwt.decode(token)['sub'];\r\n    const body = JSON.stringify({login: user_name, old_password: oldPassword, new_password: newPassword});\r\n    const response = await fetch(`${domain}/api/refresh_password`, {\r\n        method: 'POST',\r\n        body: body\r\n    });\r\n    return response.json();\r\n};\r\n","import React, {useState} from 'react';\r\nimport {refreshPassword} from './utils';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport AccountBoxIcon from '@material-ui/icons/AccountBox';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport style from './RefreshPassword.module.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(13),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        borderRadius: '20px',\r\n        padding: '2% 8%'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst RefreshPassword = () => {\r\n    const [password, setPassword] = useState({});\r\n    const [alert, setAlert] = useState(false);\r\n    const classes = useStyles();\r\n\r\n    const onChangePassword = (e) => {\r\n        const {target} = e;\r\n        e.preventDefault();\r\n        setPassword({ ...password, [target.name]: target.value});\r\n    };\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        if (!accessToken) {\r\n            return\r\n        }\r\n        refreshPassword(accessToken, password.oldPassword, password.newPassword)\r\n        .then(data => {\r\n            if (data.status) {\r\n                setAlert(false)\r\n            } else {\r\n                setAlert(true);\r\n                setTimeout(() => {\r\n                    setAlert(false);\r\n                }, 1000)\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            {alert && <Alert severity=\"warning\">Пароль не изменён.</Alert>}\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <AccountBoxIcon />\r\n                </Avatar>\r\n                <h4 className={style.h5}>Обновление пароля</h4>\r\n                <form onSubmit={onSubmit} className={classes.form}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        label=\"Старый пароль\"\r\n                        name=\"oldPassword\"\r\n                        type='text'\r\n                        id='old-password'\r\n                        autoFocus\r\n                        className={classes.textInput}\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"newPassword\"\r\n                        label=\"Новый пароль\"\r\n                        type=\"text\"\r\n                        id=\"new-password\"\r\n                        className='password'\r\n                        onChange={onChangePassword}\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.submit}\r\n                    >\r\n                        Обновить\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default RefreshPassword;\r\n","import {domain} from \"../../../config\";\r\n\r\nexport const addBusStop = async (token, busStopName, city, typeBusStop) => {\r\n    const body = JSON.stringify({bus_stop_name: busStopName, city: city, type_bus_stop: typeBusStop});\r\n    const response = await fetch(`${domain}/api/user/add_bus_stop`, {\r\n        method: 'POST',\r\n        body: body,\r\n        headers: {\r\n            'Content-Type': 'application/x-www-form-urlencoded',\r\n            'Authorization': token\r\n        },\r\n    });\r\n    return response.json()\r\n};\r\n\r\nexport const getCityStops = async (city) => {\r\n    const response = await fetch(`${domain}/api/${city}/city_stops`, {\r\n        method: 'GET'\r\n    });\r\n    return response.json();\r\n};","import React, {useEffect, useState, useRef} from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {addBusStop, getCityStops} from './utils'\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport style from './AddBusStop.module.css'\r\nimport Alert from '@material-ui/lab/Alert';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(13),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n        borderRadius: '20px',\r\n        padding: '2% 8%',\r\n        width: '100%'\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst AddBusStop = () => {\r\n    const [formData, setFormData] = useState({\r\n        city: 'brest',\r\n        typeBusStop: 'dirty',\r\n        busStopName: 'цум'\r\n    });\r\n    const [alert, setAlert] = useState(false);\r\n    const selectionRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getCityStops(formData.city)\r\n        .then(json => {\r\n            if (json.detail !== undefined) return;\r\n            if (selectionRef.current !== null){\r\n                if (selectionRef.current.length  !== 0) selectionRef.current.innerHTML='';\r\n                json.map((value) => {\r\n                    selectionRef.current.append(new Option(value, \"busStopName\"))\r\n                });\r\n                setFormData({\r\n                    ...formData,\r\n                    busStopName: json[0],\r\n                })\r\n            }\r\n        })\r\n    }, [formData.city]);\r\n\r\n    const onChange = ({target}) => {\r\n        if (target.type === 'select-one') {\r\n            if (target.length === 0) return;\r\n            const option = target.options[target.selectedIndex];\r\n            setFormData({\r\n                ...formData,\r\n                [option.value]: option.text,\r\n            })\r\n        } else {\r\n            setFormData({...formData, [target.name]: target.value})\r\n        }};\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const accessToken = localStorage.getItem('accessToken');\r\n        addBusStop(accessToken, formData.busStopName, formData.city, formData.typeBusStop)\r\n        .then(data => {\r\n            if (data.status) {\r\n                setAlert(false);\r\n            } else {\r\n                setAlert(true);\r\n                setTimeout(() => {\r\n                    setAlert(false);\r\n                }, 1000);\r\n            }\r\n        })\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container maxWidth=\"xs\">\r\n            {alert && <Alert severity=\"warning\">Остановка не добавлена.</Alert>}\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <AddIcon />\r\n                </Avatar>\r\n                <h4 className={style.h5}>Добавить остановку</h4>\r\n                <form onSubmit={onSubmitForm}>\r\n                    <div style={{\r\n                        width: '50%'\r\n                    }}>\r\n                        <h5 className={style.h6}>Города</h5>\r\n                        <Select\r\n                            value={formData.city}\r\n                            onChange={onChange}\r\n                            name='city'\r\n                            style={{width: '200%'}}\r\n                        >\r\n                            <MenuItem value='brest'>Брест</MenuItem>\r\n                            <MenuItem value='gomel'>Гомель</MenuItem>\r\n                            <MenuItem value='grodno'>Гродно</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className={style.h6}>Тип остановки</h5>\r\n                        <Select\r\n                            value={formData.typeBusStop}\r\n                            onChange={onChange}\r\n                            name='typeBusStop'\r\n                            style={{width: '100%'}}\r\n                        >\r\n                            <MenuItem value='dirty'>С контроллерами</MenuItem>\r\n                            <MenuItem value='clean'>Без контроллеров</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <h5 className={style.h6}>Номер автобуса</h5>\r\n                        <select\r\n                            ref={selectionRef}\r\n                            onChange={onChange}\r\n                            className={style['bus-number-select']}\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.submit}\r\n                    >\r\n                        Добавить\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default AddBusStop;","import React from 'react';\r\nimport { Switch, useRouteMatch, Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport RefreshPassword from './RefreshPassword/RefreshPassword';\r\nimport AddBusStop from './AddBusStop/AddBusStop'\r\n\r\nconst Profile = () => {\r\n    let { url } = useRouteMatch();\r\n    const isAuth = useSelector(state => state.auth.isAuth);\r\n\r\n    return (\r\n        <div>\r\n            {isAuth ? <></> : <Redirect to='/auth' />}\r\n            <Switch>\r\n                <Route path={`${url}/refresh_password`}>\r\n                    <RefreshPassword />\r\n                </Route>\r\n                <Route path={`${url}/add_bus_stop`}>\r\n                    <AddBusStop />\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Transport.module.css';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n\r\nconst TableComponent = (props) => {\r\n    const { Head, busStopData } = props;\r\n    return (\r\n        <TableContainer component={Paper} className={style['main-table']}>\r\n            <Table className={style['table']} size='medium' padding='default'>\r\n                <TableHead>\r\n                    <TableRow>\r\n                        {Head.map((value) => (\r\n                            <TableCell align=\"left\" key={value}>{value}</TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {busStopData !== undefined ? Object.entries(busStopData).map((value) => (\r\n                        <TableRow key={value[0]}>\r\n                            <TableCell align=\"left\">{value[0]}</TableCell>\r\n                            <TableCell align=\"center\">{value[1][0]}</TableCell>\r\n                            <TableCell align=\"right\">{value[1][1]}</TableCell>\r\n                        </TableRow>\r\n                    )) : <TableRow />}\r\n                </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n    );\r\n};\r\n\r\nTableComponent.defaultProps = {\r\n    Head: ['Остановка', 'Кол-во сообщений', 'Время'],\r\n};\r\n\r\nTableComponent.propTypes = {\r\n    Head: PropTypes.array,\r\n    busStopData: PropTypes.object,\r\n};\r\n\r\nexport default TableComponent;","import {domain} from \"../../config\";\r\n\r\nexport const getTransportNumber = (city, transportType) => {\r\n    return fetch(`${domain}/api/${city}/transport_numbers?transport_type=${transportType}`)\r\n        .then((response) => response.json());\r\n};\r\n\r\nexport const getBusStopInformation = (city, transport_number, selection_bus_stop, time, sort, transport_type) => {\r\n    const url = `${domain}/api/${city}/get_situation/${transport_number}?selection_bus_stop=${selection_bus_stop}&time=${time}&sort=${sort}&transport_type=${transport_type}`;\r\n    return fetch(url).then((response) => response.json());\r\n};\r\n\r\nexport function getDefaultTableOptions(defaulTableValue) {\r\n    const value = JSON.parse(localStorage.getItem('tableValue'));\r\n    if (value === null) {\r\n        localStorage.setItem('tableValue', JSON.stringify(defaulTableValue));\r\n        return defaulTableValue;\r\n    }\r\n    return value;\r\n}","import React, {useState, useEffect, useRef} from 'react';\r\nimport TableComponent from './Table'\r\nimport style from './Transport.module.css';\r\nimport { getTransportNumber, getBusStopInformation, getDefaultTableOptions } from './utils.js';\r\nimport Button from '@material-ui/core/Button';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.success.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nconst defaulTableValue = {\r\n    city: 'brest',\r\n    transport_number: '1',\r\n    selection_bus_stop: 'dirty',\r\n    time: 10000,\r\n    sort: 'Время',\r\n    transport_type: 'bus',\r\n    isFirst: true\r\n};\r\n\r\nconst Transport = () => {\r\n    const [tableOptions, settableOptions] = useState(getDefaultTableOptions(defaulTableValue));\r\n    const [tableValue, setTableValue] = useState();\r\n    const classes = useStyles();\r\n    const selectionRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        getTransportNumber(tableOptions.city, tableOptions.transport_type)\r\n            .then((json) => {\r\n                if (json.detail !== undefined) return;\r\n                if (selectionRef.current !== null){\r\n                    if (selectionRef.current.length  !== 0) selectionRef.current.innerHTML='';\r\n                    json.map((value) => {\r\n                        selectionRef.current.append(new Option(value, \"transport_number\"))\r\n                    });\r\n                    settableOptions({\r\n                        ...tableOptions,\r\n                        transport_number: json[0],\r\n                    })\r\n                }\r\n            });\r\n    }, [tableOptions.city, tableOptions.transport_type]);\r\n\r\n    useEffect(() => {\r\n        if (tableOptions.isFirst) {\r\n            const { city, transport_number, selection_bus_stop, time, sort, transport_type } = tableOptions;\r\n            getBusStopInformation(city, transport_number, selection_bus_stop, time, sort, transport_type)\r\n                .then((data) => {\r\n                    if (data.detail !== undefined) return;\r\n                    setTableValue(data);\r\n                });\r\n        }\r\n    }, [tableOptions.isFirst]);\r\n\r\n    const onSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const { city, transport_number, selection_bus_stop, time, sort, transport_type } = tableOptions;\r\n        getBusStopInformation(city, transport_number, selection_bus_stop, time, sort, transport_type)\r\n            .then((data) => {\r\n                localStorage.setItem('tableValue', JSON.stringify(tableOptions));\r\n                setTableValue(data);\r\n            });\r\n    };\r\n\r\n    const onChange = ({target}) => {\r\n        if (target.type === 'select-one') {\r\n            if (target.length === 0) return;\r\n            const option = target.options[target.selectedIndex];\r\n            settableOptions({\r\n                ...tableOptions,\r\n                [option.value]: option.text,\r\n            })\r\n        } else {\r\n            settableOptions({...tableOptions, [target.name]: target.value});\r\n        }};\r\n\r\n    const onRange = (event, newValue) => {\r\n        settableOptions({...tableOptions, time: newValue});\r\n    };\r\n\r\n    return (\r\n        <div className={style.container}>\r\n            <div className={style['main-form']}>\r\n                <Avatar className={classes.avatar} style={{margin: '0 auto'}}>\r\n                    <BookIcon />\r\n                </Avatar>\r\n                <Typography variant=\"h5\" align='left' gutterBottom style={{textAlign: 'center'}}>\r\n                    Информация\r\n                </Typography>\r\n                <form onSubmit={onSubmitForm}>\r\n                    <div>\r\n                        <Typography variant=\"h6\" align='left' gutterBottom>\r\n                            Города\r\n                        </Typography>\r\n                        <Select\r\n                            value={tableOptions.city}\r\n                            onChange={onChange}\r\n                            name='city'\r\n                            style={{width: '100%'}}\r\n                        >\r\n                            <MenuItem value='brest'>Брест</MenuItem>\r\n                            <MenuItem value='gomel'>Гомель</MenuItem>\r\n                            <MenuItem value='grodno'>Гродно</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant=\"h6\" align='left' gutterBottom>\r\n                            Тип транспорта\r\n                        </Typography>\r\n                        <Select\r\n                            value={tableOptions.transport_type}\r\n                            onChange={onChange}\r\n                            name='transport_type'\r\n                            style={{width: '100%'}}\r\n                        >\r\n                            <MenuItem value='bus'>Автобус</MenuItem>\r\n                            <MenuItem value='trolleybus'>Троллейбус</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant=\"h6\" align='left' gutterBottom>\r\n                            Тип остановки\r\n                        </Typography>\r\n                        <Select\r\n                            value={tableOptions.selection_bus_stop}\r\n                            onChange={onChange}\r\n                            name='selection_bus_stop'\r\n                            style={{width: '100%'}}\r\n                        >\r\n                            <MenuItem value='dirty'>С контроллерами</MenuItem>\r\n                            <MenuItem value='clean'>Без контроллеров</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant=\"h6\" align='left' gutterBottom>\r\n                            Тип сортировки\r\n                        </Typography>\r\n                        <Select\r\n                            value={tableOptions.sort}\r\n                            onChange={onChange}\r\n                            name='sort'\r\n                            style={{width: '100%'}}\r\n                        >\r\n                            <MenuItem value='Время'>Время</MenuItem>\r\n                            <MenuItem value='Сообщения'>Сообщения</MenuItem>\r\n                        </Select>\r\n                    </div>\r\n                    <div>\r\n                        <Typography variant=\"h6\" align='left' gutterBottom>\r\n                            Время\r\n                        </Typography>\r\n                        <Slider\r\n                            defaultValue={10000}\r\n                            aria-labelledby=\"discrete-slider\"\r\n                            valueLabelDisplay=\"auto\"\r\n                            step={4000}\r\n                            marks\r\n                            min={1000}\r\n                            max={99999}\r\n                            onChange={onRange}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <h5 className={classes.h6}>Номер автобуса</h5>\r\n                        <select\r\n                            ref={selectionRef}\r\n                            onChange={onChange}\r\n                            className={style['bus-number-select']}\r\n                            name='transport_number'\r\n                        />\r\n                    </div>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        fullWidth\r\n                        className={classes.submit}\r\n                    >\r\n                        Добавить\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n            <div>\r\n                <TableComponent busStopData={tableValue} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Transport;","import React, {useState} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport BookIcon from '@material-ui/icons/Book';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst createAccount = async (login, email, password) => {\r\n  const body = JSON.stringify({login: login, email: email, password: password});\r\n  const response = await fetch('http://127.0.0.1:8000/api/create_account', {\r\n    method: 'POST',\r\n    body: body\r\n  });\r\n  return response.json()\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(13),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    backgroundColor: 'white',\r\n    borderRadius: '20px',\r\n    padding: '2% 8%'\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.success.main,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst CreateAccount = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({});\r\n  const [alert, setAlert] = useState({\r\n    state: false,\r\n    msg: ''\r\n  });\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    createAccount(data.login, data.email, data.password)\r\n        .then((data) => {\r\n          if (data.status !== undefined) {\r\n            setAlert({...alert, state:true, msg: 'Проверьте правильность данных!'});\r\n            setTimeout(() => {\r\n              setAlert({...alert, state:false, msg:''});\r\n            }, 1000)\r\n          }\r\n          if (data.access_token && data.refresh_token) {\r\n            localStorage.setItem('accessToken', data.access_token);\r\n            localStorage.setItem('refreshToken', data.refresh_token);\r\n            setAlert({...alert, state:true, msg: 'Подтвердите адрес электронной почты!'});\r\n            setTimeout(() => {\r\n              setAlert({...alert, state:false, msg:''});\r\n              setRedirect(true);\r\n            }, 2000)\r\n          }\r\n        })\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    const {target} = e;\r\n    setData({ ...data, [target.name]: target.value});\r\n  };\r\n\r\n  return (\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        {alert.state && <Alert severity=\"warning\">{alert.msg}</Alert>}\r\n        {redirect && <Redirect to='/transport' />}\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar} style={{margin: '0 auto'}}>\r\n            <BookIcon />\r\n          </Avatar>\r\n          <Typography variant=\"h5\" align='left' gutterBottom>\r\n            Создание аккаунта\r\n          </Typography>\r\n          <form className={classes.form} onSubmit={onSubmit}>\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                type='email'\r\n                id='email'\r\n                autoFocus\r\n                onChange={onChange}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"login\"\r\n                label=\"Login\"\r\n                type=\"text\"\r\n                id=\"login\"\r\n                onChange={onChange}\r\n            />\r\n            <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                onChange={onChange}\r\n            />\r\n            <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                fullWidth\r\n                className={classes.submit}\r\n            >\r\n              Создать\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </Container>\r\n  );\r\n};\r\n\r\nexport default CreateAccount;","import React, { useEffect } from 'react';\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Header from './components/Header/Header';\nimport Auth from './components/Auth/Auth';\nimport { checkToken, refreshTokenAction } from './redux/Actions/authAction';\nimport Profile from './components/Profile/Profile';\nimport Transport from './components/Transport/Transport';\nimport Container from '@material-ui/core/Container';\nimport CreateAccount from \"./components/CreateAccount/CreateAccount\";\n\nfunction App({ auth, dispatch }) {\n  useEffect(() => {\n    if (!auth) {\n      const token = localStorage.getItem('accessToken');\n      dispatch(checkToken(token));\n      const refreshToken = localStorage.getItem('refreshToken');\n      dispatch(refreshTokenAction(token, refreshToken));\n    }\n  }, [auth]);\n  return (\n    <BrowserRouter>\n      <Header />\n      <Container maxWidth='xl'>\n        <Switch>\n          <Route path='/user'>\n            <Profile />\n          </Route>\n          <Route path='/auth'>\n            <Auth />\n          </Route>\n          <Route path='/create_account'>\n            <CreateAccount />\n          </Route>\n          <Route path='/transport'>\n            <Transport />\n          </Route>\n        </Switch>\n      </Container>\n    </BrowserRouter>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth.isAuth,\n});\n\nexport default connect(mapStateToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, compose, applyMiddleware} from 'redux';\nimport {Provider} from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport {rootReducer} from './redux/Reducer/rootReducer';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {authMiddleware} from './redux/Middleware/AuthMiddleware'\n\nconst store = createStore(rootReducer, compose(\n  applyMiddleware(\n    thunk, authMiddleware\n    ),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import {refreshTokenAction} from '../Actions/authAction'\r\n\r\n\r\nexport function authMiddleware(state) {\r\n    return next => action => {\r\n        const stateData = state.getState();\r\n        if (stateData.auth.isAuth) {\r\n            const accessToken = localStorage.getItem('accessToken');\r\n            const refreshToken = localStorage.getItem('refreshToken');\r\n            refreshTokenAction(accessToken, refreshToken)\r\n        }\r\n        return next(action)\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-form\":\"Transport_main-form__1kQZ3\",\"container\":\"Transport_container__1YkRX\",\"main-table\":\"Transport_main-table__2qvOV\",\"table\":\"Transport_table__beBRq\",\"bus-number-select\":\"Transport_bus-number-select__12alg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bus-number-select\":\"AddBusStop_bus-number-select__3slH3\",\"h5\":\"AddBusStop_h5__2lR9h\",\"h6\":\"AddBusStop_h6__2PTBV\"};"],"sourceRoot":""}